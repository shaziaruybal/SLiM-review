{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Optima-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Optima-Regular;
\f3\fmodern\fcharset0 CourierNewPSMT;\f4\fswiss\fcharset0 Optima-Italic;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue247;
\red255\green255\blue252;\red255\green255\blue130;\red255\green255\blue137;\red255\green255\blue249;\red255\green255\blue131;
\red255\green247\blue50;\red255\green255\blue173;\red255\green255\blue218;\red255\green253\blue51;\red255\green245\blue50;
\red255\green255\blue217;\red255\green255\blue254;\red255\green255\blue201;\red255\green255\blue223;\red255\green255\blue154;
\red252\green78\blue50;\red255\green255\blue151;\red255\green255\blue176;\red255\green255\blue57;\red255\green255\blue245;
\red255\green255\blue95;\red255\green255\blue101;\red255\green255\blue251;\red255\green255\blue246;\red255\green255\blue244;
\red255\green234\blue50;\red255\green255\blue149;\red255\green255\blue206;\red255\green243\blue50;\red255\green231\blue50;
\red255\green255\blue205;\red255\green255\blue184;\red255\green255\blue212;\red255\green255\blue124;\red255\green255\blue133;
\red255\green255\blue195;\red252\green43\blue50;\red253\green174\blue50;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c97647;
\cssrgb\c100000\c100000\c99216;\cssrgb\c100000\c100000\c58039;\cssrgb\c100000\c100000\c60392;\cssrgb\c100000\c100000\c98039;\cssrgb\c100000\c100000\c58431;
\cssrgb\c100000\c96078\c25098;\cssrgb\c100000\c100000\c73333;\cssrgb\c100000\c100000\c88235;\cssrgb\c100000\c98039\c25098;\cssrgb\c100000\c95686\c25098;
\cssrgb\c100000\c100000\c87843;\cssrgb\c100000\c100000\c99608;\cssrgb\c100000\c100000\c82745;\cssrgb\c100000\c100000\c89804;\cssrgb\c100000\c100000\c66667;
\cssrgb\c100000\c40000\c25098;\cssrgb\c100000\c100000\c65490;\cssrgb\c100000\c100000\c74118;\cssrgb\c100000\c100000\c28235;\cssrgb\c100000\c100000\c96863;
\cssrgb\c100000\c100000\c44314;\cssrgb\c100000\c100000\c47059;\cssrgb\c100000\c100000\c98824;\cssrgb\c100000\c100000\c97255;\cssrgb\c100000\c100000\c96471;
\cssrgb\c100000\c92157\c25098;\cssrgb\c100000\c100000\c64706;\cssrgb\c100000\c100000\c84314;\cssrgb\c100000\c94902\c25098;\cssrgb\c100000\c91373\c25098;
\cssrgb\c100000\c100000\c83922;\cssrgb\c100000\c100000\c76863;\cssrgb\c100000\c100000\c86275;\cssrgb\c100000\c100000\c55686;\cssrgb\c100000\c100000\c59216;
\cssrgb\c100000\c100000\c80784;\cssrgb\c100000\c27059\c25098;\cssrgb\c100000\c73333\c25098;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs56\fsmilli28364 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Profile Report
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 Model: Human 1e5, mosquito 5e6
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 Run start: 3/1/23, 11:40:19 PM
\f1\fs24 \cb1 \

\f2\fs41 \cb2 Run end: 3/2/23, 9:00:08 AM
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 Elapsed wall clock time: 33589.05 s
\f1\fs24 \cb1 \

\f2\fs41 \cb2 Elapsed wall clock time inside SLiM core (corrected): 5210.31 s
\f1\fs24 \cb1 \

\f2\fs41 \cb2 Elapsed CPU time inside SLiM core (uncorrected): 8268.29 s
\f1\fs24 \cb1 \

\f2\fs41 \cb2 Elapsed ticks: 3651 (including initialize)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 Profile block external overhead: 18.05 ticks (1.805e-08 s)
\f1\fs24 \cb1 \

\f2\fs41 \cb2 Profile block internal lag: 14.90 ticks (1.49e-08 s)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 Average tick SLiM memory use: 1.80 GB
\f1\fs24 \cb1 \

\f2\fs41 \cb2 Final tick SLiM memory use: 1.80 GB
\f1\fs24 \cb1 \

\f2\fs41 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 Cycle stage breakdown
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2    0.00 s ( 0.00%)
\f2\fs41  : initialize() callback execution
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : stage 0 \'96 first() event execution
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2  145.05 s ( 2.78%)
\f2\fs41  : stage 1 \'96 offspring generation
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.93 s ( 0.02%)
\f2\fs41  : stage 2 \'96 early() event execution
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2  222.41 s ( 4.27%)
\f2\fs41  : stage 3 \'96 fitness calculation
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2  189.76 s ( 3.64%)
\f2\fs41  : stage 4 \'96 viability/survival selection
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : stage 5 \'96 bookkeeping (fixed mutation removal, etc.)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 3907.22 s (74.99%)
\f2\fs41  : stage 6 \'96 late() event execution
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : stage 7 \'96 tree sequence auto-simplification
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 Callback type breakdown
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2    0.00 s ( 0.00%)
\f2\fs41  : initialize() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : first() events
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2  179.40 s ( 3.44%)
\f2\fs41  : reproduction() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : recombination() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : mutation() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : modifyChild() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.92 s ( 0.02%)
\f2\fs41  : early() events
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : mutationEffect() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : fitnessEffect() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : survival() callbacks
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 3907.10 s (74.99%)
\f2\fs41  : late() events
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0.00 s ( 0.00%)
\f2\fs41  : interaction() callbacks
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 Script block profiles (as a fraction of corrected wall clock time)
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0.92 s (0.02%):
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 1 early() \{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// create host and vector subpops
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	human.addSubpop("p1", N_human);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	mosquito.addSubpop("p2", N_mosquito);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	hosts = p1.individuals;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	vectors = p2.individuals;	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// tag them as S for now
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	hosts.tag = S;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	vectors.tag = S;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	h_tags = sum(hosts.tag[hosts.tag == I]);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	v_tags = sum(vectors.tag[vectors.tag == I]);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// sanity check Day 1 should be 0 infected
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	cat("\\n ------Day 1------ \\n -Number of human infections: " + h_tags + " \\n -Number of mosquito infections: " + v_tags);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// here we would want to remember founder pop, but would have to do separately?? I don't think tree sequence recording will work because of this!
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 //	human.treeSeqRememberIndividuals(hosts);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 //	mosquito.treeSeqRememberIndividuals(vectors);
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \} 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 3907.08 s (74.99%):
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 1:3650 late() \{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// at each tick, Hs can be infected based on pr_m2h, Hi can clear at rate h_clearance, Vs can become infected based on trans potential, and Vi can become Vs clears based on v_mortality rate
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	hosts = p1.individuals;	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb4 vectors = p2.individuals\cb2 ;	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	day = community.tick;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// at each tick, record N's in each category
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	h_total = hosts.size(); // equiv to H
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	v_total = vectors.size(); // equiv to M
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 h_i_total = sum(hosts.tag[hosts.tag == I])\cb2 ; // equiv to x 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb6 v_i_total = sum(vectors.tag[vectors.tag == I])\cb2 ; // equiv to z
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 h_s_total = sum(hosts.tag[hosts.tag == S])\cb2 ; 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb7 v_s_total = sum(vectors.tag[vectors.tag == S])\cb2 ; 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// derived parameters
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	v_density = v_i_total/h_total; // record z (v_i/h_total)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	ratio_m2h = v_total/h_total; // record m (v_total/h_total)	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	rate_m2h = biting_rate*v_density*ratio_m2h;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	pr_m2h = 1-exp(-rate_m2h); // m2h_prob dependent on z (daily probability) 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	rate_h2m = biting_rate*h_i_total; 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	pr_h2m = 1-exp(-rate_h2m); // pr_h2m dependent on x 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// hosts first
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 for (h in hosts)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// if susceptible has probability pr_m2h of getting infected on this day
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\cb8 if (h.tag == S)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			if (runif(1) < pr_m2h)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				h.tag = I;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// otherwise if infected clear at rate h_clearance 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		else \cb8 if (h.tag == I)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			\cb4 if (runif(1) < h_clearance)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				h.tag = S;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// now mosquitoes 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb9 for (v in vectors)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// if susceptible has probability pr_h2m of getting infected on this day
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\cb10 if (v.tag == S)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			\cb11 if (runif(1) < pr_h2m)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				\cb12 v.tag = I\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// otherwise if susceptible clear at rate beta (20% fixed param)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		else \cb13 if (v.tag == I)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			\cb14 if (runif(1) < v_mortality)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				\cb15 v.tag = S\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	cat("\\n\\n ------Day " + day + "------\\n" + "\\n - Total number of hosts: " + h_total + "\\n - Number of infected hosts: " + h_i_total + "\\n - Number of susceptible hosts: " + h_s_total + "\\n - Total number of vectors: " + v_total + "\\n - Number of infected mosquitos: " + v_i_total + "\\n - Number of susceptible mosquitos: " + v_s_total + "\\n - Vector density (v_i/h_i): " + v_density + "\\n Mosquito-to-human rate: " + rate_m2h + "\\n Probability host infected: " + pr_m2h + "\\n Human-to-mosquito rate: " + rate_h2m + "\\n Probability mosquito infected: " + pr_h2m);
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 	// color according to health status; S=blue, I=red
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb16 hosts_tags = hosts.tag\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	hosts[hosts_tags == S].color = "lightblue";
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 hosts[hosts_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb17 vectors_tags = vectors.tag\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb18 vectors[vectors_tags == S].color = "lightblue"\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb19 vectors[vectors_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 \} 
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 (blocks using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 Script block profiles (as a fraction of within-block wall clock time)
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0.92 s (0.02%):
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 1 early() \{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// create host and vector subpops
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb4 human.addSubpop("p1", N_human)\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb20 mosquito.addSubpop("p2", N_mosquito)\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	hosts = p1.individuals;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb21 vectors = p2.individuals\cb2 ;	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// tag them as S for now
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb16 hosts.tag = S\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb22 vectors.tag = S\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 h_tags = sum(hosts.tag[hosts.tag == I])\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb23 v_tags = sum(vectors.tag[vectors.tag == I])\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// sanity check Day 1 should be 0 infected
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	cat("\\n ------Day 1------ \\n -Number of human infections: " + h_tags + " \\n -Number of mosquito infections: " + v_tags);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// here we would want to remember founder pop, but would have to do separately?? I don't think tree sequence recording will work because of this!
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 //	human.treeSeqRememberIndividuals(hosts);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 //	mosquito.treeSeqRememberIndividuals(vectors);
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \} 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 3907.08 s (74.99%):
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 1:3650 late() \{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// at each tick, Hs can be infected based on pr_m2h, Hi can clear at rate h_clearance, Vs can become infected based on trans potential, and Vi can become Vs clears based on v_mortality rate
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	hosts = p1.individuals;	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb24 vectors = p2.individuals\cb2 ;	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	day = community.tick;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// at each tick, record N's in each category
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	h_total = hosts.size(); // equiv to H
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	v_total = vectors.size(); // equiv to M
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 h_i_total = sum(hosts.tag[hosts.tag == I])\cb2 ; // equiv to x 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb25 v_i_total = sum(vectors.tag[vectors.tag == I])\cb2 ; // equiv to z
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 h_s_total = sum(hosts.tag[hosts.tag == S])\cb2 ; 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb26 v_s_total = sum(vectors.tag[vectors.tag == S])\cb2 ; 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// derived parameters
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	v_density = v_i_total/h_total; // record z (v_i/h_total)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	ratio_m2h = v_total/h_total; // record m (v_total/h_total)	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	rate_m2h = biting_rate*v_density*ratio_m2h;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	pr_m2h = 1-exp(-rate_m2h); // m2h_prob dependent on z (daily probability) 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	rate_h2m = biting_rate*h_i_total; 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	pr_h2m = 1-exp(-rate_h2m); // pr_h2m dependent on x 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// hosts first
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb27 for (h in hosts)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// if susceptible has probability pr_m2h of getting infected on this day
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\cb28 if (h.tag == S)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			\cb16 if (runif(1) < pr_m2h)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				h.tag = I;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// otherwise if infected clear at rate h_clearance 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		else \cb28 if (h.tag == I)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			\cb29 if (runif(1) < h_clearance)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				h.tag = S;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	// now mosquitoes 
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb25 for (v in vectors)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// if susceptible has probability pr_h2m of getting infected on this day
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\cb30 if (v.tag == S)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			\cb31 if (runif(1) < pr_h2m)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				\cb32 v.tag = I\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		// otherwise if susceptible clear at rate beta (20% fixed param)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		else \cb33 if (v.tag == I)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 			\cb34 if (runif(1) < v_mortality)\cb2  
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 				\cb35 v.tag = S\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 		\}	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\}
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	cat("\\n\\n ------Day " + day + "------\\n" + "\\n - Total number of hosts: " + h_total + "\\n - Number of infected hosts: " + h_i_total + "\\n - Number of susceptible hosts: " + h_s_total + "\\n - Total number of vectors: " + v_total + "\\n - Number of infected mosquitos: " + v_i_total + "\\n - Number of susceptible mosquitos: " + v_s_total + "\\n - Vector density (v_i/h_i): " + v_density + "\\n Mosquito-to-human rate: " + rate_m2h + "\\n Probability host infected: " + pr_m2h + "\\n Human-to-mosquito rate: " + rate_h2m + "\\n Probability mosquito infected: " + pr_h2m);
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 	// color according to health status; S=blue, I=red
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 hosts_tags = hosts.tag\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	hosts[hosts_tags == S].color = "lightblue";
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb5 hosts[hosts_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb36 vectors_tags = vectors.tag\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb37 vectors[vectors_tags == S].color = "lightblue"\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb38 vectors[vectors_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 \} 
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 (blocks using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 User-defined functions (as a fraction of corrected wall clock time)
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 291.07 s (5.59%):
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 (integer$)countInfectedInSubpop(object<Subpopulation>\'a0subpop)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 \{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb27 inds = subpop.individuals\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb39 inds_infected = sum(inds.tag[inds.tag == I])\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	return(inds_infected);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 \} 
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 (functions using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 User-defined functions (as a fraction of within-block wall clock time)
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 291.07 s (5.59%):
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 (integer$)countInfectedInSubpop(object<Subpopulation>\'a0subpop)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 \{
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb40 inds = subpop.individuals\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	\cb41 inds_infected = sum(inds.tag[inds.tag == I])\cb2 ;
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 	return(inds_infected);
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2 \} 
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 (functions using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 MutationRun usage (\uc0\u55358 \u56735  mosquito)
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 (omitted for no-genetics species)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 MutationRun usage (\uc0\u55358 \u56781  human)
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 (omitted for no-genetics species)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 SLiM memory usage (average / final tick)
\f1\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 1.94 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 1.94 KB
\f2\fs41  : Chromosome objects (2.00 / 2)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    64 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 64 bytes
\f2\fs41  : mutation rate maps
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    32 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 32 bytes
\f2\fs41  : recombination rate maps
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : ancestral nucleotides
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 1.91 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 1.91 KB
\f2\fs41  : Community object
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb42 0.76 GB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb42 0.76 GB
\f2\fs41 \cb2  : Genome objects (10197206.24 / 10200000)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : external MutationRun* buffers
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    \cb35 39.29 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb35 39.30 MB
\f2\fs41 \cb2  : unused pool space
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : unused pool buffers
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : GenomicElement objects (0.00 / 0)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : GenomicElementType objects (0.00 / 0)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb3 1.90 GB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb3 1.90 GB
\f2\fs41 \cb2  : Individual objects (10197206.24 / 10200000)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2    \cb3 4595.24 TB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb3 16777216.00 TB
\f2\fs41 \cb2  : unused pool space
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : InteractionType objects (0.00 / 0)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : Mutation objects (0.00 / 0)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    64.00 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 64.00 KB
\f2\fs41  : refcount buffer
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    \cb5 1.47 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb5 1.47 MB
\f2\fs41 \cb2  : unused pool space
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : MutationRun objects (0.00 / 0)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : external MutationIndex buffers
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : nonneutral mutation caches
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    29.81 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 29.81 KB
\f2\fs41  : unused pool space
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    64.50 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 64.50 KB
\f2\fs41  : unused pool buffers
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : MutationType objects (0.00 / 0)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 4.28 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 4.28 KB
\f2\fs41  : Species object
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : tree-sequence tables
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 1.83 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 1.83 KB
\f2\fs41  : Subpopulation objects (2.00 / 2)
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : fitness caches
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : parent tables
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : spatial maps
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : Substitution objects (0.00 / 0)
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2  
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 Eidos:
\f1\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2    \cb8 4.36 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb8 4.36 MB
\f2\fs41 \cb2  : EidosASTNode pool
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    96.00 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 96.00 KB
\f2\fs41  : EidosSymbolTable pool
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    448.00 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 448.00 KB
\f2\fs41  : EidosValue pool
\f1\fs24 \cb1 \

\f3\fs34\fsmilli17333 \cb2    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : File buffers
\f1\fs24 \cb1 \
}