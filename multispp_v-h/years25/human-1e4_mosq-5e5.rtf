{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Optima-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Optima-Regular;
\f3\fmodern\fcharset0 CourierNewPSMT;\f4\fswiss\fcharset0 Optima-Italic;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue247;
\red255\green255\blue254;\red255\green255\blue141;\red255\green255\blue146;\red255\green255\blue252;\red255\green255\blue249;
\red255\green255\blue246;\red255\green255\blue127;\red255\green248\blue51;\red255\green255\blue171;\red255\green255\blue216;
\red255\green250\blue51;\red255\green241\blue50;\red255\green255\blue214;\red255\green255\blue200;\red255\green255\blue220;
\red255\green255\blue152;\red255\green255\blue147;\red253\green181\blue50;\red255\green255\blue251;\red255\green253\blue51;
\red255\green255\blue250;\red255\green255\blue51;\red255\green255\blue245;\red254\green201\blue50;\red255\green255\blue110;
\red255\green255\blue117;\red255\green255\blue244;\red255\green255\blue93;\red255\green235\blue50;\red255\green255\blue204;
\red255\green240\blue50;\red255\green228\blue50;\red255\green255\blue202;\red255\green255\blue184;\red255\green255\blue211;
\red255\green255\blue124;\red255\green255\blue130;\red255\green255\blue195;\red252\green43\blue50;\red253\green178\blue50;
\red255\green255\blue198;\red255\green255\blue236;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c97647;
\cssrgb\c100000\c100000\c99608;\cssrgb\c100000\c100000\c61961;\cssrgb\c100000\c100000\c63922;\cssrgb\c100000\c100000\c99216;\cssrgb\c100000\c100000\c98039;
\cssrgb\c100000\c100000\c97255;\cssrgb\c100000\c100000\c56863;\cssrgb\c100000\c96471\c25098;\cssrgb\c100000\c100000\c72549;\cssrgb\c100000\c100000\c87451;
\cssrgb\c100000\c97255\c25098;\cssrgb\c100000\c94510\c25098;\cssrgb\c100000\c100000\c87059;\cssrgb\c100000\c100000\c82353;\cssrgb\c100000\c100000\c89020;
\cssrgb\c100000\c100000\c65882;\cssrgb\c100000\c100000\c64314;\cssrgb\c100000\c75686\c25098;\cssrgb\c100000\c100000\c98824;\cssrgb\c100000\c98039\c25098;
\cssrgb\c100000\c100000\c98431;\cssrgb\c100000\c99216\c25098;\cssrgb\c100000\c100000\c96863;\cssrgb\c100000\c81961\c25098;\cssrgb\c100000\c100000\c50196;
\cssrgb\c100000\c100000\c52941;\cssrgb\c100000\c100000\c96471;\cssrgb\c100000\c100000\c43529;\cssrgb\c100000\c92549\c25098;\cssrgb\c100000\c100000\c83529;
\cssrgb\c100000\c94118\c25098;\cssrgb\c100000\c90588\c25098;\cssrgb\c100000\c100000\c83137;\cssrgb\c100000\c100000\c76863;\cssrgb\c100000\c100000\c85882;
\cssrgb\c100000\c100000\c55686;\cssrgb\c100000\c100000\c58039;\cssrgb\c100000\c100000\c80784;\cssrgb\c100000\c27059\c25098;\cssrgb\c100000\c74510\c25098;
\cssrgb\c100000\c100000\c81569;\cssrgb\c100000\c100000\c94118;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs56\fsmilli28364 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 Profile Report
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3 Model: Human 1e4, mosquito 5e5
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3 Run start: 3/2/23, 10:01:46 AM
\f1\fs24 \cb1 \strokec3 \

\f2\fs41 \cb2 \strokec3 Run end: 3/2/23, 10:37:27 AM
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3 Elapsed wall clock time: 2140.95 s
\f1\fs24 \cb1 \strokec3 \

\f2\fs41 \cb2 \strokec3 Elapsed wall clock time inside SLiM core (corrected): 1188.88 s
\f1\fs24 \cb1 \strokec3 \

\f2\fs41 \cb2 \strokec3 Elapsed CPU time inside SLiM core (uncorrected): 2131.68 s
\f1\fs24 \cb1 \strokec3 \

\f2\fs41 \cb2 \strokec3 Elapsed ticks: 9126 (including initialize)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3 Profile block external overhead: 18.88 ticks (1.888e-08 s)
\f1\fs24 \cb1 \strokec3 \

\f2\fs41 \cb2 \strokec3 Profile block internal lag: 15.57 ticks (1.557e-08 s)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3 Average tick SLiM memory use: 192.14 MB
\f1\fs24 \cb1 \strokec3 \

\f2\fs41 \cb2 \strokec3 Final tick SLiM memory use: 192.15 MB
\f1\fs24 \cb1 \strokec3 \

\f2\fs41 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 Cycle stage breakdown
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : initialize() callback execution
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.01 s ( 0.00%)
\f2\fs41  : stage 0 \'96 first() event execution
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3  11.18 s ( 0.94%)
\f2\fs41  : stage 1 \'96 offspring generation
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.03 s ( 0.00%)
\f2\fs41  : stage 2 \'96 early() event execution
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3  44.74 s ( 3.76%)
\f2\fs41  : stage 3 \'96 fitness calculation
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3  38.94 s ( 3.28%)
\f2\fs41  : stage 4 \'96 viability/survival selection
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : stage 5 \'96 bookkeeping (fixed mutation removal, etc.)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 912.86 s (76.78%)
\f2\fs41  : stage 6 \'96 late() event execution
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : stage 7 \'96 tree sequence auto-simplification
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 Callback type breakdown
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : initialize() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : first() events
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3  43.46 s ( 3.66%)
\f2\fs41  : reproduction() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : recombination() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : mutation() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : modifyChild() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.02 s ( 0.00%)
\f2\fs41  : early() events
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : mutationEffect() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : fitnessEffect() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : survival() callbacks
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 912.66 s (76.77%)
\f2\fs41  : late() events
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3   0.00 s ( 0.00%)
\f2\fs41  : interaction() callbacks
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 Script block profiles (as a fraction of corrected wall clock time)
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0.02 s (0.00%):
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 1 early() \{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// create host and vector subpops
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	human.addSubpop("p1", N_human);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	mosquito.addSubpop("p2", N_mosquito);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	hosts = p1.individuals;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	vectors = p2.individuals;	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// tag them as S for now
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	hosts.tag = S;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	vectors.tag = S;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	h_tags = sum(hosts.tag[hosts.tag == I]);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	v_tags = sum(vectors.tag[vectors.tag == I]);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// sanity check Day 1 should be 0 infected
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	cat("\\n ------Day 1------ \\n -Number of human infections: " + h_tags + " \\n -Number of mosquito infections: " + v_tags);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// here we would want to remember founder pop, but would have to do separately?? I don't think tree sequence recording will work because of this!
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 //	human.treeSeqRememberIndividuals(hosts);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 //	mosquito.treeSeqRememberIndividuals(vectors);
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \} 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 912.64 s (76.76%):
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 1:9125 late() \{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// at each tick, Hs can be infected based on pr_m2h, Hi can clear at rate h_clearance, Vs can become infected based on trans potential, and Vi can become Vs clears based on v_mortality rate
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	hosts = p1.individuals;	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb4 vectors = p2.individuals\cb2 ;	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	day = community.tick;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// at each tick, record N's in each category
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	h_total = hosts.size(); // equiv to H
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	v_total = vectors.size(); // equiv to M
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 h_i_total = sum(hosts.tag[hosts.tag == I])\cb2 ; // equiv to x 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb6 v_i_total = sum(vectors.tag[vectors.tag == I])\cb2 ; // equiv to z
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 h_s_total = sum(hosts.tag[hosts.tag == S])\cb2 ; 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb7 v_s_total = sum(vectors.tag[vectors.tag == S])\cb2 ; 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// derived parameters
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	v_density = v_i_total/h_total; // record z (v_i/h_total)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	ratio_m2h = v_total/h_total; // record m (v_total/h_total)	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	rate_m2h = biting_rate*v_density*ratio_m2h;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	pr_m2h = 1-exp(-rate_m2h); // m2h_prob dependent on z (daily probability) 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	rate_h2m = biting_rate*h_i_total; 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	pr_h2m = 1-exp(-rate_h2m); // pr_h2m dependent on x 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// hosts first
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb8 for (h in hosts)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// if susceptible has probability pr_m2h of getting infected on this day
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\cb9 if (h.tag == S)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			if (runif(1) < pr_m2h)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				h.tag = I;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// otherwise if infected clear at rate h_clearance 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		else \cb4 if (h.tag == I)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			\cb10 if (runif(1) < h_clearance)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				h.tag = S;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// now mosquitoes 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb11 for (v in vectors)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// if susceptible has probability pr_h2m of getting infected on this day
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\cb12 if (v.tag == S)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			\cb13 if (runif(1) < pr_h2m)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				\cb14 v.tag = I\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// otherwise if susceptible clear at rate beta (20% fixed param)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		else \cb15 if (v.tag == I)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			\cb16 if (runif(1) < v_mortality)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				\cb17 v.tag = S\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 cat("\\n\\n ------Day " + day + "------\\n" + "\\n - Total number of hosts: " + h_total + "\\n - Number of infected hosts: " + h_i_total + "\\n - Number of susceptible hosts: " + h_s_total + "\\n - Total number of vectors: " + v_total + "\\n - Number of infected mosquitos: " + v_i_total + "\\n - Number of susceptible mosquitos: " + v_s_total + "\\n - Vector density (v_i/h_i): " + v_density + "\\n Mosquito-to-human rate: " + rate_m2h + "\\n Probability host infected: " + pr_m2h + "\\n Human-to-mosquito rate: " + rate_h2m + "\\n Probability mosquito infected: " + pr_h2m)\cb2 ;
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 	// color according to health status; S=blue, I=red
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 hosts_tags = hosts.tag\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	hosts[hosts_tags == S].color = "lightblue";
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 hosts[hosts_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb18 vectors_tags = vectors.tag\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb19 vectors[vectors_tags == S].color = "lightblue"\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb20 vectors[vectors_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 \} 
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 \strokec3 (blocks using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 Script block profiles (as a fraction of within-block wall clock time)
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0.02 s (0.00%):
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 1 early() \{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// create host and vector subpops
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb21 human.addSubpop("p1", N_human)\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb22 mosquito.addSubpop("p2", N_mosquito)\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb23 hosts = p1.individuals\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb24 vectors = p2.individuals\cb2 ;	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// tag them as S for now
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb25 hosts.tag = S\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb26 vectors.tag = S\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb27 h_tags = sum(hosts.tag[hosts.tag == I])\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb28 v_tags = sum(vectors.tag[vectors.tag == I])\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// sanity check Day 1 should be 0 infected
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 cat("\\n ------Day 1------ \\n -Number of human infections: " + h_tags + " \\n -Number of mosquito infections: " + v_tags)\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// here we would want to remember founder pop, but would have to do separately?? I don't think tree sequence recording will work because of this!
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 //	human.treeSeqRememberIndividuals(hosts);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 //	mosquito.treeSeqRememberIndividuals(vectors);
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 \} 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 912.64 s (76.76%):
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 1:9125 late() \{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// at each tick, Hs can be infected based on pr_m2h, Hi can clear at rate h_clearance, Vs can become infected based on trans potential, and Vi can become Vs clears based on v_mortality rate
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	hosts = p1.individuals;	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb27 vectors = p2.individuals\cb2 ;	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	day = community.tick;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// at each tick, record N's in each category
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	h_total = hosts.size(); // equiv to H
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	v_total = vectors.size(); // equiv to M
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb8 h_i_total = sum(hosts.tag[hosts.tag == I])\cb2 ; // equiv to x 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb29 v_i_total = sum(vectors.tag[vectors.tag == I])\cb2 ; // equiv to z
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb8 h_s_total = sum(hosts.tag[hosts.tag == S])\cb2 ; 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb30 v_s_total = sum(vectors.tag[vectors.tag == S])\cb2 ; 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// derived parameters
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	v_density = v_i_total/h_total; // record z (v_i/h_total)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	ratio_m2h = v_total/h_total; // record m (v_total/h_total)	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	rate_m2h = biting_rate*v_density*ratio_m2h;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	pr_m2h = 1-exp(-rate_m2h); // m2h_prob dependent on z (daily probability) 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	rate_h2m = biting_rate*h_i_total; 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	pr_h2m = 1-exp(-rate_h2m); // pr_h2m dependent on x 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// hosts first
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb23 for (h in hosts)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// if susceptible has probability pr_m2h of getting infected on this day
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\cb10 if (h.tag == S)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			\cb5 if (runif(1) < pr_m2h)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				h.tag = I;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// otherwise if infected clear at rate h_clearance 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		else \cb10 if (h.tag == I)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			\cb31 if (runif(1) < h_clearance)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				h.tag = S;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	// now mosquitoes 
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb32 for (v in vectors)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// if susceptible has probability pr_h2m of getting infected on this day
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\cb33 if (v.tag == S)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			\cb21 if (runif(1) < pr_h2m)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				\cb34 v.tag = I\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		// otherwise if susceptible clear at rate beta (20% fixed param)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		else \cb35 if (v.tag == I)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 			\cb36 if (runif(1) < v_mortality)\cb2  
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 				\cb37 v.tag = S\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 		\}	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\}
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 cat("\\n\\n ------Day " + day + "------\\n" + "\\n - Total number of hosts: " + h_total + "\\n - Number of infected hosts: " + h_i_total + "\\n - Number of susceptible hosts: " + h_s_total + "\\n - Total number of vectors: " + v_total + "\\n - Number of infected mosquitos: " + v_i_total + "\\n - Number of susceptible mosquitos: " + v_s_total + "\\n - Vector density (v_i/h_i): " + v_density + "\\n Mosquito-to-human rate: " + rate_m2h + "\\n Probability host infected: " + pr_m2h + "\\n Human-to-mosquito rate: " + rate_h2m + "\\n Probability mosquito infected: " + pr_h2m)\cb2 ;
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \strokec3 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb2 	// color according to health status; S=blue, I=red
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 hosts_tags = hosts.tag\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb5 hosts[hosts_tags == S].color = "lightblue"\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb8 hosts[hosts_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb38 vectors_tags = vectors.tag\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb39 vectors[vectors_tags == S].color = "lightblue"\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb40 vectors[vectors_tags == I].color = "red"\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 \} 
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 \strokec3 (blocks using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 User-defined functions (as a fraction of corrected wall clock time)
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 68.34 s (5.75%):
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 (integer$)countInfectedInSubpop(object<Subpopulation>\'a0subpop)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 \{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb23 inds = subpop.individuals\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb41 inds_infected = sum(inds.tag[inds.tag == I])\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	return(inds_infected);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 \} 
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 \strokec3 (functions using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 User-defined functions (as a fraction of within-block wall clock time)
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 68.34 s (5.75%):
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 (integer$)countInfectedInSubpop(object<Subpopulation>\'a0subpop)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 \{
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb42 inds = subpop.individuals\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	\cb43 inds_infected = sum(inds.tag[inds.tag == I])\cb2 ;
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 	return(inds_infected);
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3 \} 
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 \strokec3 (functions using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 MutationRun usage (\uc0\u55358 \u56735  mosquito)
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 \strokec3 (omitted for no-genetics species)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 MutationRun usage (\uc0\u55358 \u56781  human)
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f4\i\fs41 \cf0 \cb2 \strokec3 (omitted for no-genetics species)
\f3\i0\fs34\fsmilli17333  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs44\fsmilli22061 \cf0 \cb2 \strokec3 SLiM memory usage (average / final tick)
\f1\b0\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs9\fsmilli4727 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 1.94 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 1.94 KB
\f2\fs41  : Chromosome objects (2.00 / 2)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    64 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 64 bytes
\f2\fs41  : mutation rate maps
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    32 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 32 bytes
\f2\fs41  : recombination rate maps
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : ancestral nucleotides
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 1.91 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 1.91 KB
\f2\fs41  : Community object
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb44 \strokec3 77.81 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb44 77.82 MB
\f2\fs41 \cb2  : Genome objects (1019888.23 / 1020000)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : external MutationRun* buffers
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    \cb45 4.68 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb45 4.68 MB
\f2\fs41 \cb2  : unused pool space
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : unused pool buffers
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : GenomicElement objects (0.00 / 0)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : GenomicElementType objects (0.00 / 0)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb3 \strokec3 194.53 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb3 194.55 MB
\f2\fs41 \cb2  : Individual objects (1019888.23 / 1020000)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3    \cb3 1838.40 TB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb3 16777216.00 TB
\f2\fs41 \cb2  : unused pool space
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : InteractionType objects (0.00 / 0)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : Mutation objects (0.00 / 0)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    \cb5 64.00 KB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb5 64.00 KB
\f2\fs41 \cb2  : refcount buffer
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    \cb46 1.47 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb46 1.47 MB
\f2\fs41 \cb2  : unused pool space
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : MutationRun objects (0.00 / 0)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : external MutationIndex buffers
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : nonneutral mutation caches
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    29.81 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 29.81 KB
\f2\fs41  : unused pool space
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    \cb5 64.50 KB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb5 64.50 KB
\f2\fs41 \cb2  : unused pool buffers
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : MutationType objects (0.00 / 0)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 4.28 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 4.28 KB
\f2\fs41  : Species object
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : tree-sequence tables
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 1.83 KB
\f2\fs41  / 
\f3\fs34\fsmilli17333 1.83 KB
\f2\fs41  : Subpopulation objects (2.00 / 2)
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : fitness caches
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : parent tables
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : spatial maps
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3 0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : Substitution objects (0.00 / 0)
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs25\fsmilli12606 \cf0 \cb2 \strokec3  
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f2\fs41 \cf0 \cb2 \strokec3 Eidos:
\f1\fs24 \cb1 \strokec3 \
\pard\pardeftab720\partightenfactor0

\f3\fs34\fsmilli17333 \cf0 \cb2 \strokec3    \cb37 4.36 MB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb37 4.36 MB
\f2\fs41 \cb2  : EidosASTNode pool
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    \cb5 96.00 KB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb5 96.00 KB
\f2\fs41 \cb2  : EidosSymbolTable pool
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    \cb25 448.00 KB
\f2\fs41 \cb2  / 
\f3\fs34\fsmilli17333 \cb25 448.00 KB
\f2\fs41 \cb2  : EidosValue pool
\f1\fs24 \cb1 \strokec3 \

\f3\fs34\fsmilli17333 \cb2 \strokec3    0 bytes
\f2\fs41  / 
\f3\fs34\fsmilli17333 0 bytes
\f2\fs41  : File buffers
\f1\fs24 \cb1 \strokec3 \
}