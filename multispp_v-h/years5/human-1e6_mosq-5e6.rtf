{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Optima-Bold;\f2\froman\fcharset0 Times-Roman;
\f3\fswiss\fcharset0 Optima-Regular;\f4\fmodern\fcharset0 CourierNewPSMT;\f5\fswiss\fcharset0 Optima-Italic;
\f6\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red255\green255\blue252;
\red255\green255\blue240;\red255\green255\blue233;\red255\green255\blue137;\red255\green255\blue235;\red255\green255\blue142;
\red255\green255\blue228;\red255\green255\blue206;\red255\green255\blue250;\red255\green255\blue254;\red255\green255\blue207;
\red255\green255\blue202;\red255\green255\blue126;\red255\green255\blue51;\red255\green255\blue196;\red255\green255\blue226;
\red255\green255\blue73;\red255\green255\blue56;\red255\green255\blue247;\red255\green255\blue251;\red255\green255\blue244;
\red255\green255\blue213;\red255\green255\blue204;\red255\green254\blue51;\red252\green120\blue50;\red255\green255\blue241;
\red255\green255\blue191;\red255\green255\blue222;\red255\green255\blue110;\red255\green255\blue51;\red255\green255\blue84;
\red255\green255\blue225;\red255\green255\blue92;\red255\green255\blue214;\red255\green255\blue182;\red255\green255\blue184;
\red255\green255\blue177;\red255\green255\blue70;\red255\green243\blue50;\red255\green255\blue169;\red255\green252\blue51;
\red255\green247\blue50;\red255\green255\blue216;\red255\green255\blue239;\red255\green255\blue193;\red255\green255\blue179;
\red255\green255\blue245;\red255\green255\blue111;\red255\green255\blue118;\red252\green52\blue50;\red253\green173\blue50;
\red255\green255\blue210;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c100000\c100000\c99216;
\cssrgb\c100000\c100000\c95294;\cssrgb\c100000\c100000\c92941;\cssrgb\c100000\c100000\c60392;\cssrgb\c100000\c100000\c93725;\cssrgb\c100000\c100000\c62353;
\cssrgb\c100000\c100000\c91373;\cssrgb\c100000\c100000\c84314;\cssrgb\c100000\c100000\c98431;\cssrgb\c100000\c100000\c99608;\cssrgb\c100000\c100000\c84706;
\cssrgb\c100000\c100000\c83137;\cssrgb\c100000\c100000\c56471;\cssrgb\c100000\c99608\c25098;\cssrgb\c100000\c100000\c81176;\cssrgb\c100000\c100000\c90980;
\cssrgb\c100000\c100000\c35294;\cssrgb\c100000\c100000\c27451;\cssrgb\c100000\c100000\c97647;\cssrgb\c100000\c100000\c98824;\cssrgb\c100000\c100000\c96471;
\cssrgb\c100000\c100000\c86667;\cssrgb\c100000\c100000\c83529;\cssrgb\c100000\c98431\c25098;\cssrgb\c100000\c55294\c25098;\cssrgb\c100000\c100000\c95686;
\cssrgb\c100000\c100000\c79216;\cssrgb\c100000\c100000\c89412;\cssrgb\c100000\c100000\c50196;\cssrgb\c100000\c98824\c25098;\cssrgb\c100000\c100000\c40000;
\cssrgb\c100000\c100000\c90588;\cssrgb\c100000\c100000\c43137;\cssrgb\c100000\c100000\c87059;\cssrgb\c100000\c100000\c76471;\cssrgb\c100000\c100000\c76863;
\cssrgb\c100000\c100000\c74510;\cssrgb\c100000\c100000\c34118;\cssrgb\c100000\c94902\c25098;\cssrgb\c100000\c100000\c71765;\cssrgb\c100000\c97647\c25098;
\cssrgb\c100000\c96078\c25098;\cssrgb\c100000\c100000\c87451;\cssrgb\c100000\c100000\c94902;\cssrgb\c100000\c100000\c80000;\cssrgb\c100000\c100000\c75294;
\cssrgb\c100000\c100000\c96863;\cssrgb\c100000\c100000\c50588;\cssrgb\c100000\c100000\c53333;\cssrgb\c100000\c30196\c25098;\cssrgb\c100000\c72941\c25098;
\cssrgb\c100000\c100000\c85490;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0  
\f1\b\fs56\fsmilli28364 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Profile Report
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3 Model: Human 1e6, mosquito 5e6
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3 Run start: 3/1/23, 10:55:37 PM
\f2\fs24 \cb1 \

\f3\fs41 \cb3 Run end: 3/2/23, 12:49:43 AM
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3 Elapsed wall clock time: 6845.73 s
\f2\fs24 \cb1 \

\f3\fs41 \cb3 Elapsed wall clock time inside SLiM core (corrected): 4646.59 s
\f2\fs24 \cb1 \

\f3\fs41 \cb3 Elapsed CPU time inside SLiM core (uncorrected): 6544.94 s
\f2\fs24 \cb1 \

\f3\fs41 \cb3 Elapsed ticks: 1826 (including initialize)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3 Profile block external overhead: 21.11 ticks (2.111e-08 s)
\f2\fs24 \cb1 \

\f3\fs41 \cb3 Profile block internal lag: 16.87 ticks (1.687e-08 s)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3 Average tick SLiM memory use: 2.10 GB
\f2\fs24 \cb1 \

\f3\fs41 \cb3 Final tick SLiM memory use: 2.11 GB
\f2\fs24 \cb1 \

\f3\fs41 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 Cycle stage breakdown
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3    0.00 s ( 0.00%)
\f3\fs41  : initialize() callback execution
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : stage 0 \'96 first() event execution
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3  313.20 s ( 6.74%)
\f3\fs41  : stage 1 \'96 offspring generation
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    1.32 s ( 0.03%)
\f3\fs41  : stage 2 \'96 early() event execution
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3  185.69 s ( 4.00%)
\f3\fs41  : stage 3 \'96 fitness calculation
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3  102.16 s ( 2.20%)
\f3\fs41  : stage 4 \'96 viability/survival selection
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : stage 5 \'96 bookkeeping (fixed mutation removal, etc.)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 3085.76 s (66.41%)
\f3\fs41  : stage 6 \'96 late() event execution
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : stage 7 \'96 tree sequence auto-simplification
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 Callback type breakdown
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3    0.00 s ( 0.00%)
\f3\fs41  : initialize() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : first() events
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    4.32 s ( 0.09%)
\f3\fs41  : reproduction() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : recombination() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : mutation() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : modifyChild() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    1.32 s ( 0.03%)
\f3\fs41  : early() events
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : mutationEffect() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : fitnessEffect() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : survival() callbacks
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 3078.34 s (66.25%)
\f3\fs41  : late() events
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0.00 s ( 0.00%)
\f3\fs41  : interaction() callbacks
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 Script block profiles (as a fraction of corrected wall clock time)
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1.31 s (0.03%):
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1 early() \{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// create host and vector subpops
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	human.addSubpop("p1", N_human);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	mosquito.addSubpop("p2", N_mosquito);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	hosts = p1.individuals;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	vectors = p2.individuals;	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// tag them as S for now
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	hosts.tag = S;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	vectors.tag = S;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	h_tags = sum(hosts.tag[hosts.tag == I]);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	v_tags = sum(vectors.tag[vectors.tag == I]);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// sanity check Day 1 should be 0 infected
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	cat("\\n ------Day 1------ \\n -Number of human infections: " + h_tags + " \\n -Number of mosquito infections: " + v_tags);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// here we would want to remember founder pop, but would have to do separately?? I don't think tree sequence recording will work because of this!
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 //	human.treeSeqRememberIndividuals(hosts);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 //	mosquito.treeSeqRememberIndividuals(vectors);
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \} 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 3078.33 s (66.25%):
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1:1825 late() \{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// at each tick, Hs can be infected based on pr_m2h, Hi can clear at rate h_clearance, Vs can become infected based on trans potential, and Vi can become Vs clears based on v_mortality rate
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb4 hosts = p1.individuals\cb3 ;	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb5 vectors = p2.individuals\cb3 ;	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	day = community.tick;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// at each tick, record N's in each category
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	h_total = hosts.size(); // equiv to H
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	v_total = vectors.size(); // equiv to M
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb6 h_i_total = sum(hosts.tag[hosts.tag == I])\cb3 ; // equiv to x 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb7 v_i_total = sum(vectors.tag[vectors.tag == I])\cb3 ; // equiv to z
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb8 h_s_total = sum(hosts.tag[hosts.tag == S])\cb3 ; 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb9 v_s_total = sum(vectors.tag[vectors.tag == S])\cb3 ; 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// derived parameters
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	v_density = v_i_total/h_total; // record z (v_i/h_total)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	ratio_m2h = v_total/h_total; // record m (v_total/h_total)	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	rate_m2h = biting_rate*v_density*ratio_m2h;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	pr_m2h = 1-exp(-rate_m2h); // m2h_prob dependent on z (daily probability) 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	rate_h2m = biting_rate*h_i_total; 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	pr_h2m = 1-exp(-rate_h2m); // pr_h2m dependent on x 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// hosts first
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb10 for (h in hosts)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// if susceptible has probability pr_m2h of getting infected on this day
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\cb11 if (h.tag == S)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb12 if (runif(1) < pr_m2h)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb13 h.tag = I\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// otherwise if infected clear at rate h_clearance 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		else \cb14 if (h.tag == I)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb15 if (runif(1) < h_clearance)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb13 h.tag = S\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// now mosquitoes 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb16 for (v in vectors)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// if susceptible has probability pr_h2m of getting infected on this day
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\cb17 if (v.tag == S)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb18 if (runif(1) < pr_h2m)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb19 v.tag = I\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// otherwise if susceptible clear at rate beta (20% fixed param)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		else \cb20 if (v.tag == I)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb21 if (runif(1) < v_mortality)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb10 v.tag = S\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	cat("\\n\\n ------Day " + day + "------\\n" + "\\n - Total number of hosts: " + h_total + "\\n - Number of infected hosts: " + h_i_total + "\\n - Number of susceptible hosts: " + h_s_total + "\\n - Total number of vectors: " + v_total + "\\n - Number of infected mosquitos: " + v_i_total + "\\n - Number of susceptible mosquitos: " + v_s_total + "\\n - Vector density (v_i/h_i): " + v_density + "\\n Mosquito-to-human rate: " + rate_m2h + "\\n Probability host infected: " + pr_m2h + "\\n Human-to-mosquito rate: " + rate_h2m + "\\n Probability mosquito infected: " + pr_h2m);
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 	// color according to health status; S=blue, I=red
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb22 hosts_tags = hosts.tag\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb23 hosts[hosts_tags == S].color = "lightblue"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb24 hosts[hosts_tags == I].color = "red"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb25 vectors_tags = vectors.tag\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb19 vectors[vectors_tags == S].color = "lightblue"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb26 vectors[vectors_tags == I].color = "red"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 \} 
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f5\i\fs41 \cf2 \cb3 (blocks using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f4\i0\fs34\fsmilli17333  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 Script block profiles (as a fraction of within-block wall clock time)
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1.31 s (0.03%):
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1 early() \{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// create host and vector subpops
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb27 human.addSubpop("p1", N_human)\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb28 mosquito.addSubpop("p2", N_mosquito)\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb29 hosts = p1.individuals\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb30 vectors = p2.individuals\cb3 ;	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// tag them as S for now
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb31 hosts.tag = S\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb32 vectors.tag = S\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb14 h_tags = sum(hosts.tag[hosts.tag == I])\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb33 v_tags = sum(vectors.tag[vectors.tag == I])\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// sanity check Day 1 should be 0 infected
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	cat("\\n ------Day 1------ \\n -Number of human infections: " + h_tags + " \\n -Number of mosquito infections: " + v_tags);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// here we would want to remember founder pop, but would have to do separately?? I don't think tree sequence recording will work because of this!
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 //	human.treeSeqRememberIndividuals(hosts);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 //	mosquito.treeSeqRememberIndividuals(vectors);
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \} 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 3078.33 s (66.25%):
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1:1825 late() \{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// at each tick, Hs can be infected based on pr_m2h, Hi can clear at rate h_clearance, Vs can become infected based on trans potential, and Vi can become Vs clears based on v_mortality rate
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb12 hosts = p1.individuals\cb3 ;	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb6 vectors = p2.individuals\cb3 ;	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	day = community.tick;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// at each tick, record N's in each category
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	h_total = hosts.size(); // equiv to H
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	v_total = vectors.size(); // equiv to M
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb31 h_i_total = sum(hosts.tag[hosts.tag == I])\cb3 ; // equiv to x 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb34 v_i_total = sum(vectors.tag[vectors.tag == I])\cb3 ; // equiv to z
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb35 h_s_total = sum(hosts.tag[hosts.tag == S])\cb3 ; 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb36 v_s_total = sum(vectors.tag[vectors.tag == S])\cb3 ; 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// derived parameters
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	v_density = v_i_total/h_total; // record z (v_i/h_total)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	ratio_m2h = v_total/h_total; // record m (v_total/h_total)	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	rate_m2h = biting_rate*v_density*ratio_m2h;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	pr_m2h = 1-exp(-rate_m2h); // m2h_prob dependent on z (daily probability) 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	rate_h2m = biting_rate*h_i_total; 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	pr_h2m = 1-exp(-rate_h2m); // pr_h2m dependent on x 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// hosts first
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb37 for (h in hosts)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// if susceptible has probability pr_m2h of getting infected on this day
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\cb38 if (h.tag == S)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb22 if (runif(1) < pr_m2h)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb4 h.tag = I\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// otherwise if infected clear at rate h_clearance 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		else \cb39 if (h.tag == I)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb40 if (runif(1) < h_clearance)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb4 h.tag = S\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	// now mosquitoes 
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb41 for (v in vectors)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// if susceptible has probability pr_h2m of getting infected on this day
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\cb42 if (v.tag == S)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb43 if (runif(1) < pr_h2m)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb25 v.tag = I\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		// otherwise if susceptible clear at rate beta (20% fixed param)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		else \cb44 if (v.tag == I)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 			\cb45 if (runif(1) < v_mortality)\cb3  
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 				\cb46 v.tag = S\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 		\}	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\}
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	cat("\\n\\n ------Day " + day + "------\\n" + "\\n - Total number of hosts: " + h_total + "\\n - Number of infected hosts: " + h_i_total + "\\n - Number of susceptible hosts: " + h_s_total + "\\n - Total number of vectors: " + v_total + "\\n - Number of infected mosquitos: " + v_i_total + "\\n - Number of susceptible mosquitos: " + v_s_total + "\\n - Vector density (v_i/h_i): " + v_density + "\\n Mosquito-to-human rate: " + rate_m2h + "\\n Probability host infected: " + pr_m2h + "\\n Human-to-mosquito rate: " + rate_h2m + "\\n Probability mosquito infected: " + pr_h2m);
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \uc0\u8232 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 	// color according to health status; S=blue, I=red
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb24 hosts_tags = hosts.tag\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb12 hosts[hosts_tags == S].color = "lightblue"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb47 hosts[hosts_tags == I].color = "red"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb48 vectors_tags = vectors.tag\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb25 vectors[vectors_tags == S].color = "lightblue"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb49 vectors[vectors_tags == I].color = "red"\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 \} 
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f5\i\fs41 \cf2 \cb3 (blocks using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f4\i0\fs34\fsmilli17333  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 User-defined functions (as a fraction of corrected wall clock time)
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 326.21 s (7.02%):
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 (integer$)countInfectedInSubpop(object<Subpopulation>\'a0subpop)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 \{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb50 inds = subpop.individuals\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb51 inds_infected = sum(inds.tag[inds.tag == I])\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	return(inds_infected);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 \} 
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f5\i\fs41 \cf2 \cb3 (functions using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f4\i0\fs34\fsmilli17333  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 User-defined functions (as a fraction of within-block wall clock time)
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 326.21 s (7.02%):
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 (integer$)countInfectedInSubpop(object<Subpopulation>\'a0subpop)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 \{
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb52 inds = subpop.individuals\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	\cb53 inds_infected = sum(inds.tag[inds.tag == I])\cb3 ;
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 	return(inds_infected);
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3 \} 
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f5\i\fs41 \cf2 \cb3 (functions using < 0.01 s and < 0.01% of total wall clock time are not shown)
\f4\i0\fs34\fsmilli17333  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 MutationRun usage (
\f6\b0 \uc0\u55358 \u56735 
\f1\b  mosquito)
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f5\i\fs41 \cf2 \cb3 (omitted for no-genetics species)
\f4\i0\fs34\fsmilli17333  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 MutationRun usage (
\f6\b0 \uc0\u55358 \u56781 
\f1\b  human)
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f5\i\fs41 \cf2 \cb3 (omitted for no-genetics species)
\f4\i0\fs34\fsmilli17333  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs44\fsmilli22061 \cf2 \cb3 SLiM memory usage (average / final tick)
\f2\b0\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs9\fsmilli4727 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1.94 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 1.94 KB
\f3\fs41  : Chromosome objects (2.00 / 2)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    64 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 64 bytes
\f3\fs41  : mutation rate maps
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    32 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 32 bytes
\f3\fs41  : recombination rate maps
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : ancestral nucleotides
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1.91 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 1.91 KB
\f3\fs41  : Community object
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb54 0.89 GB
\f3\fs41 \cb3  / 
\f4\fs34\fsmilli17333 \cb54 0.89 GB
\f3\fs41 \cb3  : Genome objects (11993428.26 / 12000000)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : external MutationRun* buffers
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    \cb55 41.95 MB
\f3\fs41 \cb3  / 
\f4\fs34\fsmilli17333 \cb55 41.97 MB
\f3\fs41 \cb3  : unused pool space
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : unused pool buffers
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : GenomicElement objects (0.00 / 0)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : GenomicElementType objects (0.00 / 0)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb2 2.23 GB
\f3\fs41 \cb3  / 
\f4\fs34\fsmilli17333 \cb2 2.24 GB
\f3\fs41 \cb3  : Individual objects (11993428.26 / 12000000)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3    \cb2 9187.96 TB
\f3\fs41 \cb3  / 
\f4\fs34\fsmilli17333 \cb2 16777216.00 TB
\f3\fs41 \cb3  : unused pool space
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : InteractionType objects (0.00 / 0)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : Mutation objects (0.00 / 0)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    64.00 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 64.00 KB
\f3\fs41  : refcount buffer
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    \cb13 1.50 MB
\f3\fs41 \cb3  / 
\f4\fs34\fsmilli17333 \cb13 1.50 MB
\f3\fs41 \cb3  : unused pool space
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : MutationRun objects (0.00 / 0)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : external MutationIndex buffers
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : nonneutral mutation caches
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : unused pool space
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : unused pool buffers
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : MutationType objects (0.00 / 0)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 4.28 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 4.28 KB
\f3\fs41  : Species object
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : tree-sequence tables
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 1.83 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 1.83 KB
\f3\fs41  : Subpopulation objects (2.00 / 2)
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : fitness caches
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : parent tables
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : spatial maps
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3 0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : Substitution objects (0.00 / 0)
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs25\fsmilli12606 \cf2 \cb3  
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs41 \cf2 \cb3 Eidos:
\f2\fs24 \cb1 \
\pard\pardeftab720\partightenfactor0

\f4\fs34\fsmilli17333 \cf2 \cb3    432.00 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 432.00 KB
\f3\fs41  : EidosASTNode pool
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    47.99 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 48.00 KB
\f3\fs41  : EidosSymbolTable pool
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    64.00 KB
\f3\fs41  / 
\f4\fs34\fsmilli17333 64.00 KB
\f3\fs41  : EidosValue pool
\f2\fs24 \cb1 \

\f4\fs34\fsmilli17333 \cb3    0 bytes
\f3\fs41  / 
\f4\fs34\fsmilli17333 0 bytes
\f3\fs41  : File buffers
\f2\fs24 \cb1 \
}